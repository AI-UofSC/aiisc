{"ast":null,"code":"import _defineProperty from \"/Users/mos7rng/Desktop/Slides/Conferences/ISWC22/Tutorial/KL4AD/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n// Mixins\nimport { inject as RegistrableInject } from '../registrable';\nexport function factory(namespace, child, parent) {\n  return RegistrableInject(namespace, child, parent).extend({\n    name: 'groupable',\n    props: {\n      activeClass: {\n        type: String,\n        default: function _default() {\n          if (!this[namespace]) return undefined;\n          return this[namespace].activeClass;\n        }\n      },\n      disabled: Boolean\n    },\n    data: function data() {\n      return {\n        isActive: false\n      };\n    },\n    computed: {\n      groupClasses: function groupClasses() {\n        if (!this.activeClass) return {};\n        return _defineProperty({}, this.activeClass, this.isActive);\n      }\n    },\n    created: function created() {\n      this[namespace] && this[namespace].register(this);\n    },\n    beforeDestroy: function beforeDestroy() {\n      this[namespace] && this[namespace].unregister(this);\n    },\n    methods: {\n      toggle: function toggle() {\n        this.$emit('change');\n      }\n    }\n  });\n}\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\n\nvar Groupable = factory('itemGroup');\nexport default Groupable;","map":{"version":3,"mappings":";AAAA;AACA,SAAsBA,MAAM,IAAIC,iBAAhC,QAAyD,gBAAzD;AAeA,OAAM,SAAUC,OAAV,CACJC,SADI,EAEJC,KAFI,EAGJC,MAHI,EAGW;AAEf,SAAOJ,iBAAiB,CAAOE,SAAP,EAAkBC,KAAlB,EAAyBC,MAAzB,CAAjB,CAAkDC,MAAlD,CAAyD;AAC9DC,QAAI,EAAE,WADwD;AAG9DC,SAAK,EAAE;AACLC,iBAAW,EAAE;AACXC,YAAI,EAAEC,MADK;AAEXC,eAFW,sBAEJ;AACL,cAAI,CAAC,KAAKT,SAAL,CAAL,EAAsB,OAAOU,SAAP;AAEtB,iBAAO,KAAKV,SAAL,EAAgBM,WAAvB;AACD;AANU,OADR;AASLK,cAAQ,EAAEC;AATL,KAHuD;AAe9DC,QAf8D,kBAe1D;AACF,aAAO;AACLC,gBAAQ,EAAE;AADL,OAAP;AAhB4D;AAqB9DC,YAAQ,EAAE;AACRC,kBADQ,0BACI;AACV,YAAI,CAAC,KAAKV,WAAV,EAAuB,OAAO,EAAP;AAEvB,mCACG,KAAKA,WADR,EACsB,KAAKQ,QAD3B;AAGD;AAPO,KArBoD;AA+B9DG,WA/B8D,qBA+BvD;AACL,WAAKjB,SAAL,KAAoB,KAAKA,SAAL,EAAwBkB,QAAxB,CAAiC,IAAjC,CAApB;AAhC4D;AAmC9DC,iBAnC8D,2BAmCjD;AACX,WAAKnB,SAAL,KAAoB,KAAKA,SAAL,EAAwBoB,UAAxB,CAAmC,IAAnC,CAApB;AApC4D;AAuC9DC,WAAO,EAAE;AACPC,YADO,oBACD;AACJ,aAAKC,KAAL,CAAW,QAAX;AACD;AAHM;AAvCqD,GAAzD,CAAP;AA6CD;AAED;;AACA,IAAMC,SAAS,GAAGzB,OAAO,CAAC,WAAD,CAAzB;AAEA,eAAeyB,SAAf","names":["inject","RegistrableInject","factory","namespace","child","parent","extend","name","props","activeClass","type","String","default","undefined","disabled","Boolean","data","isActive","computed","groupClasses","created","register","beforeDestroy","unregister","methods","toggle","$emit","Groupable"],"sourceRoot":"","sources":["../../../src/mixins/groupable/index.ts"],"sourcesContent":["// Mixins\nimport { Registrable, inject as RegistrableInject } from '../registrable'\n\n// Utilities\nimport { ExtractVue } from '../../util/mixins'\nimport { VueConstructor } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nexport type Groupable<T extends string, C extends VueConstructor | null = null> = VueConstructor<ExtractVue<Registrable<T, C>> & {\n  activeClass: string\n  isActive: boolean\n  disabled: boolean\n  groupClasses: object\n  toggle (): void\n}>\n\nexport function factory<T extends string, C extends VueConstructor | null = null> (\n  namespace: T,\n  child?: string,\n  parent?: string\n): Groupable<T, C> {\n  return RegistrableInject<T, C>(namespace, child, parent).extend({\n    name: 'groupable',\n\n    props: {\n      activeClass: {\n        type: String,\n        default (): string | undefined {\n          if (!this[namespace]) return undefined\n\n          return this[namespace].activeClass\n        },\n      } as any as PropValidator<string>,\n      disabled: Boolean,\n    },\n\n    data () {\n      return {\n        isActive: false,\n      }\n    },\n\n    computed: {\n      groupClasses (): object {\n        if (!this.activeClass) return {}\n\n        return {\n          [this.activeClass]: this.isActive,\n        }\n      },\n    },\n\n    created () {\n      this[namespace] && (this[namespace] as any).register(this)\n    },\n\n    beforeDestroy () {\n      this[namespace] && (this[namespace] as any).unregister(this)\n    },\n\n    methods: {\n      toggle () {\n        this.$emit('change')\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\nconst Groupable = factory('itemGroup')\n\nexport default Groupable\n"]},"metadata":{},"sourceType":"module"}