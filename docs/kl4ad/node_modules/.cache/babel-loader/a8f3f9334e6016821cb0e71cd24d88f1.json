{"ast":null,"code":"import { install } from './install'; // Services\n\nimport * as services from './services';\nexport default class Vuetify {\n  constructor(userPreset = {}) {\n    this.framework = {\n      isHydrating: false\n    };\n    this.installed = [];\n    this.preset = {};\n    this.userPreset = {};\n    this.userPreset = userPreset;\n    this.use(services.Presets);\n    this.use(services.Application);\n    this.use(services.Breakpoint);\n    this.use(services.Goto);\n    this.use(services.Icons);\n    this.use(services.Lang);\n    this.use(services.Theme);\n  } // Called on the new vuetify instance\n  // bootstrap in install beforeCreate\n  // Exposes ssrContext if available\n\n\n  init(root, ssrContext) {\n    this.installed.forEach(property => {\n      const service = this.framework[property];\n      service.framework = this.framework;\n      service.init(root, ssrContext);\n    }); // rtl is not installed and\n    // will never be called by\n    // the init process\n\n    this.framework.rtl = Boolean(this.preset.rtl);\n  } // Instantiate a VuetifyService\n\n\n  use(Service) {\n    const property = Service.property;\n    if (this.installed.includes(property)) return; // TODO maybe a specific type for arg 2?\n\n    this.framework[property] = new Service(this.preset, this);\n    this.installed.push(property);\n  }\n\n}\nVuetify.install = install;\nVuetify.installed = false;\nVuetify.version = \"2.6.4\";\nVuetify.config = {\n  silent: false\n};","map":{"version":3,"mappings":"AAAA,SAASA,OAAT,QAAwB,WAAxB,C,CAaA;;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AAEA,eAAc,MAAOC,OAAP,CAAc;AAqB1BC,cAAaC,aAAgC,EAA7C,EAA+C;AAVxC,qBAAgD;AACrDC,iBAAW,EAAE;AADwC,KAAhD;AAIA,qBAAsB,EAAtB;AAEA,kBAAS,EAAT;AAEA,sBAAgC,EAAhC;AAGL,SAAKD,UAAL,GAAkBA,UAAlB;AAEA,SAAKE,GAAL,CAASL,QAAQ,CAACM,OAAlB;AACA,SAAKD,GAAL,CAASL,QAAQ,CAACO,WAAlB;AACA,SAAKF,GAAL,CAASL,QAAQ,CAACQ,UAAlB;AACA,SAAKH,GAAL,CAASL,QAAQ,CAACS,IAAlB;AACA,SAAKJ,GAAL,CAASL,QAAQ,CAACU,KAAlB;AACA,SAAKL,GAAL,CAASL,QAAQ,CAACW,IAAlB;AACA,SAAKN,GAAL,CAASL,QAAQ,CAACY,KAAlB;AA9BwB,IAiC1B;AACA;AACA;;;AACAC,MAAI,CAAEC,IAAF,EAAaC,UAAb,EAAgC;AAClC,SAAKC,SAAL,CAAeC,OAAf,CAAuBC,QAAQ,IAAG;AAChC,YAAMC,OAAO,GAAG,KAAKC,SAAL,CAAeF,QAAf,CAAhB;AAEAC,aAAO,CAACC,SAAR,GAAoB,KAAKA,SAAzB;AAEAD,aAAO,CAACN,IAAR,CAAaC,IAAb,EAAmBC,UAAnB;AALF,OADkC,CASlC;AACA;AACA;;AACA,SAAKK,SAAL,CAAeC,GAAf,GAAqBC,OAAO,CAAC,KAAKC,MAAL,CAAYF,GAAb,CAA5B;AAhDwB,IAmD1B;;;AACAhB,KAAG,CAAEmB,OAAF,EAAyB;AAC1B,UAAMN,QAAQ,GAAGM,OAAO,CAACN,QAAzB;AAEA,QAAI,KAAKF,SAAL,CAAeS,QAAf,CAAwBP,QAAxB,CAAJ,EAAuC,OAHb,CAK1B;;AACA,SAAKE,SAAL,CAAeF,QAAf,IAA2B,IAAIM,OAAJ,CAAY,KAAKD,MAAjB,EAAyB,IAAzB,CAA3B;AACA,SAAKP,SAAL,CAAeU,IAAf,CAAoBR,QAApB;AACD;;AA5DyB;AACnBjB,kBAAUF,OAAV;AAEAE,oBAAY,KAAZ;AAEAA;AAEAA,iBAAS;AACd0B,QAAM,EAAE;AADM,CAAT","names":["install","services","Vuetify","constructor","userPreset","isHydrating","use","Presets","Application","Breakpoint","Goto","Icons","Lang","Theme","init","root","ssrContext","installed","forEach","property","service","framework","rtl","Boolean","preset","Service","includes","push","silent"],"sourceRoot":"","sources":["../src/framework.ts"],"sourcesContent":["import { install } from './install'\n\n// Types\nimport Vue from 'vue'\nimport {\n  UserVuetifyPreset,\n  VuetifyPreset,\n} from 'vuetify/types/services/presets'\nimport {\n  VuetifyService,\n  VuetifyServiceContract,\n} from 'vuetify/types/services'\n\n// Services\nimport * as services from './services'\n\nexport default class Vuetify {\n  static install = install\n\n  static installed = false\n\n  static version = __VUETIFY_VERSION__\n\n  static config = {\n    silent: false,\n  }\n\n  public framework: Dictionary<VuetifyServiceContract> = {\n    isHydrating: false,\n  } as any\n\n  public installed: string[] = []\n\n  public preset = {} as VuetifyPreset\n\n  public userPreset: UserVuetifyPreset = {}\n\n  constructor (userPreset: UserVuetifyPreset = {}) {\n    this.userPreset = userPreset\n\n    this.use(services.Presets)\n    this.use(services.Application)\n    this.use(services.Breakpoint)\n    this.use(services.Goto)\n    this.use(services.Icons)\n    this.use(services.Lang)\n    this.use(services.Theme)\n  }\n\n  // Called on the new vuetify instance\n  // bootstrap in install beforeCreate\n  // Exposes ssrContext if available\n  init (root: Vue, ssrContext?: object) {\n    this.installed.forEach(property => {\n      const service = this.framework[property]\n\n      service.framework = this.framework\n\n      service.init(root, ssrContext)\n    })\n\n    // rtl is not installed and\n    // will never be called by\n    // the init process\n    this.framework.rtl = Boolean(this.preset.rtl) as any\n  }\n\n  // Instantiate a VuetifyService\n  use (Service: VuetifyService) {\n    const property = Service.property\n\n    if (this.installed.includes(property)) return\n\n    // TODO maybe a specific type for arg 2?\n    this.framework[property] = new Service(this.preset, this as any)\n    this.installed.push(property)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}