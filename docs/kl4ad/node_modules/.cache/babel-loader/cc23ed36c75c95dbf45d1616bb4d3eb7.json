{"ast":null,"code":"import _defineProperty from \"/Users/ruwan/research/bosch/spring22/kl4ad/web/ISWC22_KL4AD/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _createForOfIteratorHelper from \"/Users/ruwan/research/bosch/spring22/kl4ad/web/ISWC22_KL4AD/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport Vue from 'vue';\n/* @vue/component */\n\nexport default Vue.extend({\n  name: 'roundable',\n  props: {\n    rounded: [Boolean, String],\n    tile: Boolean\n  },\n  computed: {\n    roundedClasses: function roundedClasses() {\n      var composite = [];\n      var rounded = typeof this.rounded === 'string' ? String(this.rounded) : this.rounded === true;\n\n      if (this.tile) {\n        composite.push('rounded-0');\n      } else if (typeof rounded === 'string') {\n        var values = rounded.split(' ');\n\n        var _iterator = _createForOfIteratorHelper(values),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var value = _step.value;\n            composite.push(\"rounded-\".concat(value));\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } else if (rounded) {\n        composite.push('rounded');\n      }\n\n      return composite.length > 0 ? _defineProperty({}, composite.join(' '), true) : {};\n    }\n  }\n});","map":{"version":3,"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA;;AACA,eAAeA,GAAG,CAACC,MAAJ,CAAW;AACxBC,MAAI,EAAE,WADkB;AAGxBC,OAAK,EAAE;AACLC,WAAO,EAAE,CAACC,OAAD,EAAUC,MAAV,CADJ;AAELC,QAAI,EAAEF;AAFD,GAHiB;AAQxBG,UAAQ,EAAE;AACRC,kBADQ,4BACM;AACZ,UAAMC,SAAS,GAAG,EAAlB;AACA,UAAMN,OAAO,GAAG,OAAO,KAAKA,OAAZ,KAAwB,QAAxB,GACZE,MAAM,CAAC,KAAKF,OAAN,CADM,GAEZ,KAAKA,OAAL,KAAiB,IAFrB;;AAIA,UAAI,KAAKG,IAAT,EAAe;AACbG,iBAAS,CAACC,IAAV,CAAe,WAAf;AADF,aAEO,IAAI,OAAOP,OAAP,KAAmB,QAAvB,EAAiC;AACtC,YAAMQ,MAAM,GAAGR,OAAO,CAACS,KAAR,CAAc,GAAd,CAAf;;AADsC,mDAGlBD,MAHkB;AAAA;;AAAA;AAGtC,8DAA4B;AAAA,gBAAjBE,KAAiB;AAC1BJ,qBAAS,CAACC,IAAV,mBAA0BG,KAA1B;AACD;AALqC;AAAA;AAAA;AAAA;AAAA;AAAjC,aAMA,IAAIV,OAAJ,EAAa;AAClBM,iBAAS,CAACC,IAAV,CAAe,SAAf;AACD;;AAED,aAAOD,SAAS,CAACK,MAAV,GAAmB,CAAnB,uBACJL,SAAS,CAACM,IAAV,CAAe,GAAf,CADI,EACkB,IADlB,IAEH,EAFJ;AAGD;AAtBO;AARc,CAAX,CAAf","names":["Vue","extend","name","props","rounded","Boolean","String","tile","computed","roundedClasses","composite","push","values","split","value","length","join"],"sourceRoot":"","sources":["../../../src/mixins/roundable/index.ts"],"sourcesContent":["import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'roundable',\n\n  props: {\n    rounded: [Boolean, String],\n    tile: Boolean,\n  },\n\n  computed: {\n    roundedClasses (): Record<string, boolean> {\n      const composite = []\n      const rounded = typeof this.rounded === 'string'\n        ? String(this.rounded)\n        : this.rounded === true\n\n      if (this.tile) {\n        composite.push('rounded-0')\n      } else if (typeof rounded === 'string') {\n        const values = rounded.split(' ')\n\n        for (const value of values) {\n          composite.push(`rounded-${value}`)\n        }\n      } else if (rounded) {\n        composite.push('rounded')\n      }\n\n      return composite.length > 0 ? {\n        [composite.join(' ')]: true,\n      } : {}\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"module"}