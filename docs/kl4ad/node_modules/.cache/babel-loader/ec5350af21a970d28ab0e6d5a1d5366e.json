{"ast":null,"code":"import Vue from 'vue'; // Directives\n\nimport Ripple from '../../directives/ripple'; // Utilities\n\nimport { getObjectValueByPath } from '../../util/helpers';\nexport default Vue.extend({\n  name: 'routable',\n  directives: {\n    Ripple\n  },\n  props: {\n    activeClass: String,\n    append: Boolean,\n    disabled: Boolean,\n    exact: {\n      type: Boolean,\n      default: undefined\n    },\n    exactPath: Boolean,\n    exactActiveClass: String,\n    link: Boolean,\n    href: [String, Object],\n    to: [String, Object],\n    nuxt: Boolean,\n    replace: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: null\n    },\n    tag: String,\n    target: String\n  },\n  data: () => ({\n    isActive: false,\n    proxyClass: ''\n  }),\n  computed: {\n    classes() {\n      const classes = {};\n      if (this.to) return classes;\n      if (this.activeClass) classes[this.activeClass] = this.isActive;\n      if (this.proxyClass) classes[this.proxyClass] = this.isActive;\n      return classes;\n    },\n\n    computedRipple() {\n      var _this$ripple;\n\n      return (_this$ripple = this.ripple) != null ? _this$ripple : !this.disabled && this.isClickable;\n    },\n\n    isClickable() {\n      if (this.disabled) return false;\n      return Boolean(this.isLink || this.$listeners.click || this.$listeners['!click'] || this.$attrs.tabindex);\n    },\n\n    isLink() {\n      return this.to || this.href || this.link;\n    },\n\n    styles: () => ({})\n  },\n  watch: {\n    $route: 'onRouteChange'\n  },\n\n  mounted() {\n    this.onRouteChange();\n  },\n\n  methods: {\n    generateRouteLink() {\n      let exact = this.exact;\n      let tag;\n      const data = {\n        attrs: {\n          tabindex: 'tabindex' in this.$attrs ? this.$attrs.tabindex : undefined\n        },\n        class: this.classes,\n        style: this.styles,\n        props: {},\n        directives: [{\n          name: 'ripple',\n          value: this.computedRipple\n        }],\n        [this.to ? 'nativeOn' : 'on']: { ...this.$listeners,\n          ...('click' in this ? {\n            click: this.click\n          } : undefined)\n        },\n        ref: 'link'\n      };\n\n      if (typeof this.exact === 'undefined') {\n        exact = this.to === '/' || this.to === Object(this.to) && this.to.path === '/';\n      }\n\n      if (this.to) {\n        // Add a special activeClass hook\n        // for component level styles\n        let activeClass = this.activeClass;\n        let exactActiveClass = this.exactActiveClass || activeClass;\n\n        if (this.proxyClass) {\n          activeClass = `${activeClass} ${this.proxyClass}`.trim();\n          exactActiveClass = `${exactActiveClass} ${this.proxyClass}`.trim();\n        }\n\n        tag = this.nuxt ? 'nuxt-link' : 'router-link';\n        Object.assign(data.props, {\n          to: this.to,\n          exact,\n          exactPath: this.exactPath,\n          activeClass,\n          exactActiveClass,\n          append: this.append,\n          replace: this.replace\n        });\n      } else {\n        tag = this.href && 'a' || this.tag || 'div';\n        if (tag === 'a' && this.href) data.attrs.href = this.href;\n      }\n\n      if (this.target) data.attrs.target = this.target;\n      return {\n        tag,\n        data\n      };\n    },\n\n    onRouteChange() {\n      if (!this.to || !this.$refs.link || !this.$route) return;\n      const activeClass = `${this.activeClass || ''} ${this.proxyClass || ''}`.trim();\n      const exactActiveClass = `${this.exactActiveClass || ''} ${this.proxyClass || ''}`.trim() || activeClass;\n      const path = '_vnode.data.class.' + (this.exact ? exactActiveClass : activeClass);\n      this.$nextTick(() => {\n        /* istanbul ignore else */\n        if (!getObjectValueByPath(this.$refs.link, path) === this.isActive) {\n          this.toggle();\n        }\n      });\n    },\n\n    toggle() {\n      this.isActive = !this.isActive;\n    }\n\n  }\n});","map":{"version":3,"mappings":"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","names":["Vue","Ripple","getObjectValueByPath","extend","name","directives","props","activeClass","String","append","Boolean","disabled","exact","type","default","undefined","exactPath","exactActiveClass","link","href","Object","to","nuxt","replace","ripple","tag","target","data","isActive","proxyClass","computed","classes","computedRipple","isClickable","isLink","$listeners","click","$attrs","tabindex","styles","watch","$route","mounted","onRouteChange","methods","generateRouteLink","attrs","class","style","value","ref","path","trim","assign","$refs","$nextTick","toggle"],"sourceRoot":"","sources":["../../../src/mixins/routable/index.ts"],"sourcesContent":["import Vue, { VNodeData, PropType } from 'vue'\n\n// Directives\nimport Ripple, { RippleOptions } from '../../directives/ripple'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'routable',\n\n  directives: {\n    Ripple,\n  },\n\n  props: {\n    activeClass: String,\n    append: Boolean,\n    disabled: Boolean,\n    exact: {\n      type: Boolean as PropType<boolean | undefined>,\n      default: undefined,\n    },\n    exactPath: Boolean,\n    exactActiveClass: String,\n    link: Boolean,\n    href: [String, Object],\n    to: [String, Object],\n    nuxt: Boolean,\n    replace: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: null,\n    },\n    tag: String,\n    target: String,\n  },\n\n  data: () => ({\n    isActive: false,\n    proxyClass: '',\n  }),\n\n  computed: {\n    classes (): object {\n      const classes: Record<string, boolean> = {}\n\n      if (this.to) return classes\n\n      if (this.activeClass) classes[this.activeClass] = this.isActive\n      if (this.proxyClass) classes[this.proxyClass] = this.isActive\n\n      return classes\n    },\n    computedRipple (): RippleOptions | boolean {\n      return this.ripple ?? (!this.disabled && this.isClickable)\n    },\n    isClickable (): boolean {\n      if (this.disabled) return false\n\n      return Boolean(\n        this.isLink ||\n        this.$listeners.click ||\n        this.$listeners['!click'] ||\n        this.$attrs.tabindex\n      )\n    },\n    isLink (): boolean {\n      return this.to || this.href || this.link\n    },\n    styles: () => ({}),\n  },\n\n  watch: {\n    $route: 'onRouteChange',\n  },\n\n  mounted () {\n    this.onRouteChange()\n  },\n\n  methods: {\n    generateRouteLink () {\n      let exact = this.exact\n      let tag\n\n      const data: VNodeData = {\n        attrs: {\n          tabindex: 'tabindex' in this.$attrs ? this.$attrs.tabindex : undefined,\n        },\n        class: this.classes,\n        style: this.styles,\n        props: {},\n        directives: [{\n          name: 'ripple',\n          value: this.computedRipple,\n        }],\n        [this.to ? 'nativeOn' : 'on']: {\n          ...this.$listeners,\n          ...('click' in this ? { click: (this as any).click } : undefined), // #14447\n        },\n        ref: 'link',\n      }\n\n      if (typeof this.exact === 'undefined') {\n        exact = this.to === '/' ||\n          (this.to === Object(this.to) && this.to.path === '/')\n      }\n\n      if (this.to) {\n        // Add a special activeClass hook\n        // for component level styles\n        let activeClass = this.activeClass\n        let exactActiveClass = this.exactActiveClass || activeClass\n\n        if (this.proxyClass) {\n          activeClass = `${activeClass} ${this.proxyClass}`.trim()\n          exactActiveClass = `${exactActiveClass} ${this.proxyClass}`.trim()\n        }\n\n        tag = this.nuxt ? 'nuxt-link' : 'router-link'\n        Object.assign(data.props, {\n          to: this.to,\n          exact,\n          exactPath: this.exactPath,\n          activeClass,\n          exactActiveClass,\n          append: this.append,\n          replace: this.replace,\n        })\n      } else {\n        tag = (this.href && 'a') || this.tag || 'div'\n\n        if (tag === 'a' && this.href) data.attrs!.href = this.href\n      }\n\n      if (this.target) data.attrs!.target = this.target\n\n      return { tag, data }\n    },\n    onRouteChange () {\n      if (!this.to || !this.$refs.link || !this.$route) return\n      const activeClass = `${this.activeClass || ''} ${this.proxyClass || ''}`.trim()\n      const exactActiveClass = `${this.exactActiveClass || ''} ${this.proxyClass || ''}`.trim() || activeClass\n\n      const path = '_vnode.data.class.' + (this.exact ? exactActiveClass : activeClass)\n\n      this.$nextTick(() => {\n        /* istanbul ignore else */\n        if (!getObjectValueByPath(this.$refs.link, path) === this.isActive) {\n          this.toggle()\n        }\n      })\n    },\n    toggle () {\n      this.isActive = !this.isActive\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"module"}