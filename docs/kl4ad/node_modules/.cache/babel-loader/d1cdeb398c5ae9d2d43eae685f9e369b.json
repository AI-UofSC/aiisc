{"ast":null,"code":"import _objectSpread from \"/Users/mos7rng/Desktop/Slides/Conferences/ISWC22/Tutorial/ISWC22_KL4AD/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.string.small.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"../../../src/components/VIcon/VIcon.sass\"; // Mixins\n\nimport BindsAttrs from '../../mixins/binds-attrs';\nimport Colorable from '../../mixins/colorable';\nimport Sizeable from '../../mixins/sizeable';\nimport Themeable from '../../mixins/themeable'; // Util\n\nimport { convertToUnit, keys, remapInternalIcon } from '../../util/helpers'; // Types\n\nimport Vue from 'vue';\nimport mixins from '../../util/mixins';\nvar SIZE_MAP;\n\n(function (SIZE_MAP) {\n  SIZE_MAP[\"xSmall\"] = \"12px\";\n  SIZE_MAP[\"small\"] = \"16px\";\n  SIZE_MAP[\"default\"] = \"24px\";\n  SIZE_MAP[\"medium\"] = \"28px\";\n  SIZE_MAP[\"large\"] = \"36px\";\n  SIZE_MAP[\"xLarge\"] = \"40px\";\n})(SIZE_MAP || (SIZE_MAP = {}));\n\nfunction isFontAwesome5(iconType) {\n  return ['fas', 'far', 'fal', 'fab', 'fad', 'fak'].some(function (val) {\n    return iconType.includes(val);\n  });\n}\n\nfunction isSvgPath(icon) {\n  return /^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(icon) && /[\\dz]$/i.test(icon) && icon.length > 4;\n}\n\nvar VIcon = mixins(BindsAttrs, Colorable, Sizeable, Themeable\n/* @vue/component */\n).extend({\n  name: 'v-icon',\n  props: {\n    dense: Boolean,\n    disabled: Boolean,\n    left: Boolean,\n    right: Boolean,\n    size: [Number, String],\n    tag: {\n      type: String,\n      required: false,\n      default: 'i'\n    }\n  },\n  computed: {\n    medium: function medium() {\n      return false;\n    },\n    hasClickListener: function hasClickListener() {\n      return Boolean(this.listeners$.click || this.listeners$['!click']);\n    }\n  },\n  methods: {\n    getIcon: function getIcon() {\n      var iconName = '';\n      if (this.$slots.default) iconName = this.$slots.default[0].text.trim();\n      return remapInternalIcon(this, iconName);\n    },\n    getSize: function getSize() {\n      var sizes = {\n        xSmall: this.xSmall,\n        small: this.small,\n        medium: this.medium,\n        large: this.large,\n        xLarge: this.xLarge\n      };\n      var explicitSize = keys(sizes).find(function (key) {\n        return sizes[key];\n      });\n      return explicitSize && SIZE_MAP[explicitSize] || convertToUnit(this.size);\n    },\n    // Component data for both font icon and SVG wrapper span\n    getDefaultData: function getDefaultData() {\n      return {\n        staticClass: 'v-icon notranslate',\n        class: {\n          'v-icon--disabled': this.disabled,\n          'v-icon--left': this.left,\n          'v-icon--link': this.hasClickListener,\n          'v-icon--right': this.right,\n          'v-icon--dense': this.dense\n        },\n        attrs: _objectSpread({\n          'aria-hidden': !this.hasClickListener,\n          disabled: this.hasClickListener && this.disabled,\n          type: this.hasClickListener ? 'button' : undefined\n        }, this.attrs$),\n        on: this.listeners$\n      };\n    },\n    getSvgWrapperData: function getSvgWrapperData() {\n      var fontSize = this.getSize();\n\n      var wrapperData = _objectSpread(_objectSpread({}, this.getDefaultData()), {}, {\n        style: fontSize ? {\n          fontSize: fontSize,\n          height: fontSize,\n          width: fontSize\n        } : undefined\n      });\n\n      this.applyColors(wrapperData);\n      return wrapperData;\n    },\n    applyColors: function applyColors(data) {\n      data.class = _objectSpread(_objectSpread({}, data.class), this.themeClasses);\n      this.setTextColor(this.color, data);\n    },\n    renderFontIcon: function renderFontIcon(icon, h) {\n      var newChildren = [];\n      var data = this.getDefaultData();\n      var iconType = 'material-icons'; // Material Icon delimiter is _\n      // https://material.io/icons/\n\n      var delimiterIndex = icon.indexOf('-');\n      var isMaterialIcon = delimiterIndex <= -1;\n\n      if (isMaterialIcon) {\n        // Material icon uses ligatures.\n        newChildren.push(icon);\n      } else {\n        iconType = icon.slice(0, delimiterIndex);\n        if (isFontAwesome5(iconType)) iconType = '';\n      }\n\n      data.class[iconType] = true;\n      data.class[icon] = !isMaterialIcon;\n      var fontSize = this.getSize();\n      if (fontSize) data.style = {\n        fontSize: fontSize\n      };\n      this.applyColors(data);\n      return h(this.hasClickListener ? 'button' : this.tag, data, newChildren);\n    },\n    renderSvgIcon: function renderSvgIcon(icon, h) {\n      var svgData = {\n        class: 'v-icon__svg',\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: '0 0 24 24',\n          role: 'img',\n          'aria-hidden': true\n        }\n      };\n      var size = this.getSize();\n\n      if (size) {\n        svgData.style = {\n          fontSize: size,\n          height: size,\n          width: size\n        };\n      }\n\n      return h(this.hasClickListener ? 'button' : 'span', this.getSvgWrapperData(), [h('svg', svgData, [h('path', {\n        attrs: {\n          d: icon\n        }\n      })])]);\n    },\n    renderSvgIconComponent: function renderSvgIconComponent(icon, h) {\n      var data = {\n        class: {\n          'v-icon__component': true\n        }\n      };\n      var size = this.getSize();\n\n      if (size) {\n        data.style = {\n          fontSize: size,\n          height: size,\n          width: size\n        };\n      }\n\n      this.applyColors(data);\n      var component = icon.component;\n      data.props = icon.props;\n      data.nativeOn = data.on;\n      return h(this.hasClickListener ? 'button' : 'span', this.getSvgWrapperData(), [h(component, data)]);\n    }\n  },\n  render: function render(h) {\n    var icon = this.getIcon();\n\n    if (typeof icon === 'string') {\n      if (isSvgPath(icon)) {\n        return this.renderSvgIcon(icon, h);\n      }\n\n      return this.renderFontIcon(icon, h);\n    }\n\n    return this.renderSvgIconComponent(icon, h);\n  }\n});\nexport default Vue.extend({\n  name: 'v-icon',\n  $_wrapperFor: VIcon,\n  functional: true,\n  render: function render(h, _ref) {\n    var data = _ref.data,\n        children = _ref.children;\n    var iconName = ''; // Support usage of v-text and v-html\n\n    if (data.domProps) {\n      iconName = data.domProps.textContent || data.domProps.innerHTML || iconName; // Remove nodes so it doesn't\n      // overwrite our changes\n\n      delete data.domProps.textContent;\n      delete data.domProps.innerHTML;\n    }\n\n    return h(VIcon, data, iconName ? [iconName] : children);\n  }\n});","map":{"version":3,"mappings":"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","names":["BindsAttrs","Colorable","Sizeable","Themeable","convertToUnit","keys","remapInternalIcon","Vue","mixins","SIZE_MAP","isFontAwesome5","iconType","some","includes","val","isSvgPath","icon","test","length","VIcon","extend","name","props","dense","Boolean","disabled","left","right","size","Number","String","tag","type","required","default","computed","medium","hasClickListener","listeners$","click","methods","getIcon","iconName","$slots","text","trim","getSize","sizes","xSmall","small","large","xLarge","explicitSize","find","key","getDefaultData","staticClass","class","attrs","undefined","attrs$","on","getSvgWrapperData","fontSize","wrapperData","style","height","width","applyColors","data","themeClasses","setTextColor","color","renderFontIcon","h","newChildren","delimiterIndex","indexOf","isMaterialIcon","push","slice","renderSvgIcon","svgData","xmlns","viewBox","role","d","renderSvgIconComponent","component","nativeOn","render","$_wrapperFor","functional","children","domProps","textContent","innerHTML"],"sourceRoot":"","sources":["../../../src/components/VIcon/VIcon.ts"],"sourcesContent":["import './VIcon.sass'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Colorable from '../../mixins/colorable'\nimport Sizeable from '../../mixins/sizeable'\nimport Themeable from '../../mixins/themeable'\n\n// Util\nimport { convertToUnit, keys, remapInternalIcon } from '../../util/helpers'\n\n// Types\nimport Vue, { CreateElement, VNode, VNodeChildren, VNodeData } from 'vue'\nimport mixins from '../../util/mixins'\nimport { VuetifyIcon, VuetifyIconComponent } from 'vuetify/types/services/icons'\n\nenum SIZE_MAP {\n  xSmall = '12px',\n  small = '16px',\n  default = '24px',\n  medium = '28px',\n  large = '36px',\n  xLarge = '40px'\n}\n\nfunction isFontAwesome5 (iconType: string): boolean {\n  return ['fas', 'far', 'fal', 'fab', 'fad', 'fak'].some(val => iconType.includes(val))\n}\n\nfunction isSvgPath (icon: string): boolean {\n  return (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(icon) && /[\\dz]$/i.test(icon) && icon.length > 4)\n}\n\nconst VIcon = mixins(\n  BindsAttrs,\n  Colorable,\n  Sizeable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-icon',\n\n  props: {\n    dense: Boolean,\n    disabled: Boolean,\n    left: Boolean,\n    right: Boolean,\n    size: [Number, String],\n    tag: {\n      type: String,\n      required: false,\n      default: 'i',\n    },\n  },\n\n  computed: {\n    medium () {\n      return false\n    },\n    hasClickListener (): boolean {\n      return Boolean(\n        this.listeners$.click || this.listeners$['!click']\n      )\n    },\n  },\n\n  methods: {\n    getIcon (): VuetifyIcon {\n      let iconName = ''\n      if (this.$slots.default) iconName = this.$slots.default[0].text!.trim()\n\n      return remapInternalIcon(this, iconName)\n    },\n    getSize (): string | undefined {\n      const sizes = {\n        xSmall: this.xSmall,\n        small: this.small,\n        medium: this.medium,\n        large: this.large,\n        xLarge: this.xLarge,\n      }\n\n      const explicitSize = keys(sizes).find(key => sizes[key])\n\n      return (\n        (explicitSize && SIZE_MAP[explicitSize]) || convertToUnit(this.size)\n      )\n    },\n    // Component data for both font icon and SVG wrapper span\n    getDefaultData (): VNodeData {\n      return {\n        staticClass: 'v-icon notranslate',\n        class: {\n          'v-icon--disabled': this.disabled,\n          'v-icon--left': this.left,\n          'v-icon--link': this.hasClickListener,\n          'v-icon--right': this.right,\n          'v-icon--dense': this.dense,\n        },\n        attrs: {\n          'aria-hidden': !this.hasClickListener,\n          disabled: this.hasClickListener && this.disabled,\n          type: this.hasClickListener ? 'button' : undefined,\n          ...this.attrs$,\n        },\n        on: this.listeners$,\n      }\n    },\n    getSvgWrapperData () {\n      const fontSize = this.getSize()\n      const wrapperData = {\n        ...this.getDefaultData(),\n        style: fontSize ? {\n          fontSize,\n          height: fontSize,\n          width: fontSize,\n        } : undefined,\n      }\n      this.applyColors(wrapperData)\n\n      return wrapperData\n    },\n    applyColors (data: VNodeData): void {\n      data.class = { ...data.class, ...this.themeClasses }\n      this.setTextColor(this.color, data)\n    },\n    renderFontIcon (icon: string, h: CreateElement): VNode {\n      const newChildren: VNodeChildren = []\n      const data = this.getDefaultData()\n\n      let iconType = 'material-icons'\n      // Material Icon delimiter is _\n      // https://material.io/icons/\n      const delimiterIndex = icon.indexOf('-')\n      const isMaterialIcon = delimiterIndex <= -1\n\n      if (isMaterialIcon) {\n        // Material icon uses ligatures.\n        newChildren.push(icon)\n      } else {\n        iconType = icon.slice(0, delimiterIndex)\n        if (isFontAwesome5(iconType)) iconType = ''\n      }\n\n      data.class[iconType] = true\n      data.class[icon] = !isMaterialIcon\n\n      const fontSize = this.getSize()\n      if (fontSize) data.style = { fontSize }\n\n      this.applyColors(data)\n\n      return h(this.hasClickListener ? 'button' : this.tag, data, newChildren)\n    },\n    renderSvgIcon (icon: string, h: CreateElement): VNode {\n      const svgData: VNodeData = {\n        class: 'v-icon__svg',\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: '0 0 24 24',\n          role: 'img',\n          'aria-hidden': true,\n        },\n      }\n\n      const size = this.getSize()\n      if (size) {\n        svgData.style = {\n          fontSize: size,\n          height: size,\n          width: size,\n        }\n      }\n\n      return h(this.hasClickListener ? 'button' : 'span', this.getSvgWrapperData(), [\n        h('svg', svgData, [\n          h('path', {\n            attrs: {\n              d: icon,\n            },\n          }),\n        ]),\n      ])\n    },\n    renderSvgIconComponent (\n      icon: VuetifyIconComponent,\n      h: CreateElement\n    ): VNode {\n      const data: VNodeData = {\n        class: {\n          'v-icon__component': true,\n        },\n      }\n\n      const size = this.getSize()\n      if (size) {\n        data.style = {\n          fontSize: size,\n          height: size,\n          width: size,\n        }\n      }\n\n      this.applyColors(data)\n\n      const component = icon.component\n      data.props = icon.props\n      data.nativeOn = data.on\n\n      return h(this.hasClickListener ? 'button' : 'span', this.getSvgWrapperData(), [\n        h(component, data),\n      ])\n    },\n  },\n\n  render (h: CreateElement): VNode {\n    const icon = this.getIcon()\n\n    if (typeof icon === 'string') {\n      if (isSvgPath(icon)) {\n        return this.renderSvgIcon(icon, h)\n      }\n      return this.renderFontIcon(icon, h)\n    }\n\n    return this.renderSvgIconComponent(icon, h)\n  },\n})\n\nexport default Vue.extend({\n  name: 'v-icon',\n\n  $_wrapperFor: VIcon,\n\n  functional: true,\n\n  render (h, { data, children }): VNode {\n    let iconName = ''\n\n    // Support usage of v-text and v-html\n    if (data.domProps) {\n      iconName = data.domProps.textContent ||\n        data.domProps.innerHTML ||\n        iconName\n\n      // Remove nodes so it doesn't\n      // overwrite our changes\n      delete data.domProps.textContent\n      delete data.domProps.innerHTML\n    }\n\n    return h(VIcon, data, iconName ? [iconName] : children)\n  },\n})\n"]},"metadata":{},"sourceType":"module"}