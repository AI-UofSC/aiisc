{"ast":null,"code":"import \"../../../src/components/VGrid/_grid.sass\";\nimport \"../../../src/components/VGrid/VGrid.sass\";\nimport Grid from './grid';\nimport mergeData from '../../util/mergeData';\n/* @vue/component */\n\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    fluid: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  render(h, {\n    props,\n    data,\n    children\n  }) {\n    let classes;\n    const {\n      attrs\n    } = data;\n\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {};\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false;\n        const value = attrs[key]; // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n\n        if (key.startsWith('data-')) {\n          data.attrs[key] = value;\n          return false;\n        }\n\n        return value || typeof value === 'string';\n      });\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {};\n      data.domProps.id = props.id;\n    }\n\n    return h(props.tag, mergeData(data, {\n      staticClass: 'container',\n      class: Array({\n        'container--fluid': props.fluid\n      }).concat(classes || [])\n    }), children);\n  }\n\n});","map":{"version":3,"mappings":"AAAA,OAAO,0CAAP;AACA,OAAO,0CAAP;AAEA,OAAOA,IAAP,MAAiB,QAAjB;AAEA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA;;AACA,eAAeD,IAAI,CAAC,WAAD,CAAJ,CAAkBE,MAAlB,CAAyB;AACtCC,MAAI,EAAE,aADgC;AAEtCC,YAAU,EAAE,IAF0B;AAGtCC,OAAK,EAAE;AACLC,MAAE,EAAEC,MADC;AAELC,OAAG,EAAE;AACHC,UAAI,EAAEF,MADH;AAEHG,aAAO,EAAE;AAFN,KAFA;AAMLC,SAAK,EAAE;AACLF,UAAI,EAAEG,OADD;AAELF,aAAO,EAAE;AAFJ;AANF,GAH+B;;AActCG,QAAM,CAAEC,CAAF,EAAK;AAAET,SAAF;AAASU,QAAT;AAAeC;AAAf,GAAL,EAA8B;AAClC,QAAIC,OAAJ;AACA,UAAM;AAAEC;AAAF,QAAYH,IAAlB;;AACA,QAAIG,KAAJ,EAAW;AACT;AACAH,UAAI,CAACG,KAAL,GAAa,EAAb;AACAD,aAAO,GAAGE,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,MAAnB,CAA0BC,GAAG,IAAG;AACxC;AACA;AACA,YAAIA,GAAG,KAAK,MAAZ,EAAoB,OAAO,KAAP;AAEpB,cAAMC,KAAK,GAAGL,KAAK,CAACI,GAAD,CAAnB,CALwC,CAOxC;AACA;;AACA,YAAIA,GAAG,CAACE,UAAJ,CAAe,OAAf,CAAJ,EAA6B;AAC3BT,cAAI,CAACG,KAAL,CAAYI,GAAZ,IAAmBC,KAAnB;AACA,iBAAO,KAAP;AACD;;AAED,eAAOA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAAjC;AAdQ,QAAV;AAgBD;;AAED,QAAIlB,KAAK,CAACC,EAAV,EAAc;AACZS,UAAI,CAACU,QAAL,GAAgBV,IAAI,CAACU,QAAL,IAAiB,EAAjC;AACAV,UAAI,CAACU,QAAL,CAAcnB,EAAd,GAAmBD,KAAK,CAACC,EAAzB;AACD;;AAED,WAAOQ,CAAC,CACNT,KAAK,CAACG,GADA,EAENP,SAAS,CAACc,IAAD,EAAO;AACdW,iBAAW,EAAE,WADC;AAEdC,WAAK,EAAEC,KAAK,CAAM;AAChB,4BAAoBvB,KAAK,CAACM;AADV,OAAN,CAAL,CAEJkB,MAFI,CAEGZ,OAAO,IAAI,EAFd;AAFO,KAAP,CAFH,EAQND,QARM,CAAR;AAUD;;AArDqC,CAAzB,CAAf","names":["Grid","mergeData","extend","name","functional","props","id","String","tag","type","default","fluid","Boolean","render","h","data","children","classes","attrs","Object","keys","filter","key","value","startsWith","domProps","staticClass","class","Array","concat"],"sourceRoot":"","sources":["../../../src/components/VGrid/VContainer.ts"],"sourcesContent":["import './_grid.sass'\nimport './VGrid.sass'\n\nimport Grid from './grid'\n\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  render (h, { props, data, children }) {\n    let classes\n    const { attrs } = data\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {}\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false\n\n        const value = attrs[key]\n\n        // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n        if (key.startsWith('data-')) {\n          data.attrs![key] = value\n          return false\n        }\n\n        return value || typeof value === 'string'\n      })\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {}\n      data.domProps.id = props.id\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'container',\n        class: Array<any>({\n          'container--fluid': props.fluid,\n        }).concat(classes || []),\n      }),\n      children\n    )\n  },\n})\n"]},"metadata":{},"sourceType":"module"}