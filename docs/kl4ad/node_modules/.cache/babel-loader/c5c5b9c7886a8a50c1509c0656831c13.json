{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n// Return target's cumulative offset from the top\nexport function getOffset(target) {\n  if (typeof target === 'number') {\n    return target;\n  }\n\n  let el = $(target);\n\n  if (!el) {\n    throw typeof target === 'string' ? new Error(`Target element \"${target}\" not found.`) : new TypeError(`Target must be a Number/Selector/HTMLElement/VueComponent, received ${type(target)} instead.`);\n  }\n\n  let totalOffset = 0;\n\n  while (el) {\n    totalOffset += el.offsetTop;\n    el = el.offsetParent;\n  }\n\n  return totalOffset;\n}\nexport function getContainer(container) {\n  const el = $(container);\n  if (el) return el;\n  throw typeof container === 'string' ? new Error(`Container element \"${container}\" not found.`) : new TypeError(`Container must be a Selector/HTMLElement/VueComponent, received ${type(container)} instead.`);\n}\n\nfunction type(el) {\n  return el == null ? el : el.constructor.name;\n}\n\nfunction $(el) {\n  if (typeof el === 'string') {\n    return document.querySelector(el);\n  } else if (el && el._isVue) {\n    return el.$el;\n  } else if (el instanceof HTMLElement) {\n    return el;\n  } else {\n    return null;\n  }\n}","map":{"version":3,"mappings":";AAEA;AACA,OAAM,SAAUA,SAAV,CAAqBC,MAArB,EAAgC;AACpC,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,WAAOA,MAAP;AACD;;AAED,MAAIC,EAAE,GAAGC,CAAC,CAACF,MAAD,CAAV;;AACA,MAAI,CAACC,EAAL,EAAS;AACP,UAAM,OAAOD,MAAP,KAAkB,QAAlB,GACF,IAAIG,KAAJ,CAAU,mBAAmBH,MAAM,cAAnC,CADE,GAEF,IAAII,SAAJ,CAAc,uEAAuEC,IAAI,CAACL,MAAD,CAAQ,WAAjG,CAFJ;AAGD;;AAED,MAAIM,WAAW,GAAG,CAAlB;;AACA,SAAOL,EAAP,EAAW;AACTK,eAAW,IAAIL,EAAE,CAACM,SAAlB;AACAN,MAAE,GAAGA,EAAE,CAACO,YAAR;AACD;;AAED,SAAOF,WAAP;AACD;AAED,OAAM,SAAUG,YAAV,CAAwBC,SAAxB,EAAsC;AAC1C,QAAMT,EAAE,GAAGC,CAAC,CAACQ,SAAD,CAAZ;AAEA,MAAIT,EAAJ,EAAQ,OAAOA,EAAP;AAER,QAAM,OAAOS,SAAP,KAAqB,QAArB,GACF,IAAIP,KAAJ,CAAU,sBAAsBO,SAAS,cAAzC,CADE,GAEF,IAAIN,SAAJ,CAAc,mEAAmEC,IAAI,CAACK,SAAD,CAAW,WAAhG,CAFJ;AAGD;;AAED,SAASL,IAAT,CAAeJ,EAAf,EAAsB;AACpB,SAAOA,EAAE,IAAI,IAAN,GAAaA,EAAb,GAAkBA,EAAE,CAACU,WAAH,CAAeC,IAAxC;AACD;;AAED,SAASV,CAAT,CAAYD,EAAZ,EAAmB;AACjB,MAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AAC1B,WAAOY,QAAQ,CAACC,aAAT,CAAoCb,EAApC,CAAP;AADF,SAEO,IAAIA,EAAE,IAAIA,EAAE,CAACc,MAAb,EAAqB;AAC1B,WAAQd,EAAU,CAACe,GAAnB;AADK,SAEA,IAAIf,EAAE,YAAYgB,WAAlB,EAA+B;AACpC,WAAOhB,EAAP;AADK,SAEA;AACL,WAAO,IAAP;AACD;AACF","names":["getOffset","target","el","$","Error","TypeError","type","totalOffset","offsetTop","offsetParent","getContainer","container","constructor","name","document","querySelector","_isVue","$el","HTMLElement"],"sourceRoot":"","sources":["../../../src/services/goto/util.ts"],"sourcesContent":["import Vue from 'vue'\n\n// Return target's cumulative offset from the top\nexport function getOffset (target: any): number {\n  if (typeof target === 'number') {\n    return target\n  }\n\n  let el = $(target)\n  if (!el) {\n    throw typeof target === 'string'\n      ? new Error(`Target element \"${target}\" not found.`)\n      : new TypeError(`Target must be a Number/Selector/HTMLElement/VueComponent, received ${type(target)} instead.`)\n  }\n\n  let totalOffset = 0\n  while (el) {\n    totalOffset += el.offsetTop\n    el = el.offsetParent as HTMLElement\n  }\n\n  return totalOffset\n}\n\nexport function getContainer (container: any): HTMLElement {\n  const el = $(container)\n\n  if (el) return el\n\n  throw typeof container === 'string'\n    ? new Error(`Container element \"${container}\" not found.`)\n    : new TypeError(`Container must be a Selector/HTMLElement/VueComponent, received ${type(container)} instead.`)\n}\n\nfunction type (el: any) {\n  return el == null ? el : el.constructor.name\n}\n\nfunction $ (el: any): HTMLElement | null {\n  if (typeof el === 'string') {\n    return document.querySelector<HTMLElement>(el)\n  } else if (el && el._isVue) {\n    return (el as Vue).$el as HTMLElement\n  } else if (el instanceof HTMLElement) {\n    return el\n  } else {\n    return null\n  }\n}\n"]},"metadata":{},"sourceType":"module"}